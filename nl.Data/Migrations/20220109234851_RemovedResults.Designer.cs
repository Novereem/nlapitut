// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nl.Data;

namespace nl.Data.Migrations
{
    [DbContext(typeof(NlTutContext))]
    [Migration("20220109234851_RemovedResults")]
    partial class RemovedResults
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("nl.Commen.Models.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("NextQuestionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Answer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0d9878c6-4214-4418-8fbc-65cdd83fee97"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "300-500"
                        },
                        new
                        {
                            Id = new Guid("91fb710c-77c6-4d81-998e-161bb1797c08"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "500-800"
                        },
                        new
                        {
                            Id = new Guid("778ed6ed-6a53-4429-8b5c-b4cbbec39737"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "800-1200"
                        },
                        new
                        {
                            Id = new Guid("b0c359cb-38ee-4c58-891b-f8203468cbc3"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "1200+"
                        },
                        new
                        {
                            Id = new Guid("8d0a1695-688a-43c7-8299-bd397fbbaa31"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Mail / Netflix & YouTube"
                        },
                        new
                        {
                            Id = new Guid("ea6830ca-de89-4642-9fad-ff2251b4682c"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("c56fe364-d8a5-44cc-bdf8-ed960e6267e2"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("fe881e88-d814-4808-a701-afc60b1b9797"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Gamen"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.Laptop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Price")
                        .HasColumnType("longtext");

                    b.Property<string>("Usage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Laptops");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ae926ae9-eae1-4a12-9d06-6aeae7413ecf"),
                            Price = "300",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("91e5fa60-23ef-4b92-a713-b37cd1b830e7"),
                            Price = "500",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("16c5a7f3-8ab1-4509-859f-ad0c3de2ed03"),
                            Price = "800",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("be4cf46a-c44d-41a6-82a2-2d7ddced8989"),
                            Price = "1200",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("47d16dd4-5b56-4b09-bfc4-da5681cd0d5d"),
                            Price = "300",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("38cd137a-25ad-4e04-af42-1dde67bab85c"),
                            Price = "500",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("76c03d6b-82bb-47f1-88ce-6ad7305c12dd"),
                            Price = "800",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("ff93f7fa-187e-4594-996e-988a96348b90"),
                            Price = "1200",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("6066cd41-fda8-46dd-bbd5-22444e9a398e"),
                            Price = "300",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("2998d8d9-f63d-4098-9dba-84ed4127d63c"),
                            Price = "500",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("54d953f6-fefe-436e-a2c9-849f1d4287d9"),
                            Price = "800",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("81ce27b0-3e96-4be0-a814-6c887503fe7d"),
                            Price = "1200",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("3b719fed-6b61-4458-bc4f-287452b115f4"),
                            Price = "300",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("719ebf8c-7ca1-46a1-a1b8-ca834c13e9ed"),
                            Price = "500",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("b5c96f2d-1d5f-47e1-8d08-33fe15b16ed8"),
                            Price = "800",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("4718836b-2787-491f-a35b-78f97f828677"),
                            Price = "1200",
                            Usage = "Gamen"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Text = "Hoeveel geld wilt u besteden?"
                        },
                        new
                        {
                            Id = 2,
                            Text = "Waar ga je je laptop voor gebruiken"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.SingleAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AnswerId")
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserAnswerId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserAnswerId");

                    b.ToTable("SingeAnswers");
                });

            modelBuilder.Entity("nl.Commen.Models.UserAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UserAnswers");
                });

            modelBuilder.Entity("nl.Commen.Models.SingleAnswer", b =>
                {
                    b.HasOne("nl.Commen.Models.UserAnswer", null)
                        .WithMany("Answers")
                        .HasForeignKey("UserAnswerId");
                });

            modelBuilder.Entity("nl.Commen.Models.UserAnswer", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
