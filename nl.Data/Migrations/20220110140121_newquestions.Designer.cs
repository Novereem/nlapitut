// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nl.Data;

namespace nl.Data.Migrations
{
    [DbContext(typeof(NlTutContext))]
    [Migration("20220110140121_newquestions")]
    partial class newquestions
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("nl.Commen.Models.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("NextQuestionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Answer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b30057a-1fa1-4144-b17c-773c65c9594e"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "300-500"
                        },
                        new
                        {
                            Id = new Guid("6e79b67d-2cc2-431e-a602-14fc4e46c593"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "500-800"
                        },
                        new
                        {
                            Id = new Guid("329e83fb-85a9-4e56-9111-0f9ee8814b50"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "800-1200"
                        },
                        new
                        {
                            Id = new Guid("c31b99b8-841c-47f2-aebc-f8e9b4e6c69e"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "1200+"
                        },
                        new
                        {
                            Id = new Guid("f9e7ae77-673a-41fc-8ea7-c3d411106e17"),
                            NextQuestionId = 7,
                            QuestionId = 2,
                            Text = "Mail / Netflix & YouTube"
                        },
                        new
                        {
                            Id = new Guid("7c96f61b-0ea0-4b88-9b9d-82bb2f690f78"),
                            NextQuestionId = 7,
                            QuestionId = 2,
                            Text = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("02458852-0cd5-41d6-a5b7-0fc0c5cc03de"),
                            NextQuestionId = 3,
                            QuestionId = 2,
                            Text = "Foto's/video's bewerken"
                        },
                        new
                        {
                            Id = new Guid("8f40f411-4c73-497e-ab1d-92aa01d3dd07"),
                            NextQuestionId = 4,
                            QuestionId = 2,
                            Text = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("c18a38a9-d635-490a-8041-f09479b0e35a"),
                            NextQuestionId = 6,
                            QuestionId = 3,
                            Text = "Foto's"
                        },
                        new
                        {
                            Id = new Guid("c67ff388-2199-4f5c-a3aa-943ff32e192c"),
                            NextQuestionId = 6,
                            QuestionId = 3,
                            Text = "Video's"
                        },
                        new
                        {
                            Id = new Guid("7f75cb3a-9ea8-40ca-ba95-9dc821e56288"),
                            NextQuestionId = 5,
                            QuestionId = 4,
                            Text = "Shooters"
                        },
                        new
                        {
                            Id = new Guid("a7b66806-89f2-4412-acf4-88bb9a8564da"),
                            NextQuestionId = 5,
                            QuestionId = 4,
                            Text = "Moba"
                        },
                        new
                        {
                            Id = new Guid("206ae5cf-9d6c-44d9-abed-5f7892fee369"),
                            NextQuestionId = 5,
                            QuestionId = 4,
                            Text = "Action-adventure"
                        },
                        new
                        {
                            Id = new Guid("5d7798a3-b870-41e6-939e-f4761a7ce6ad"),
                            NextQuestionId = 5,
                            QuestionId = 4,
                            Text = "Esports"
                        },
                        new
                        {
                            Id = new Guid("78737b95-6721-46b1-9617-ee04594d578a"),
                            NextQuestionId = 5,
                            QuestionId = 4,
                            Text = "Real-time strategy"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.Laptop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Price")
                        .HasColumnType("longtext");

                    b.Property<string>("Usage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Laptops");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2e0f0cd4-127d-4c45-8008-d907399db9ca"),
                            Price = "300",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("a7c058d0-9acb-4255-826a-8b1bed88f324"),
                            Price = "500",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("99764bad-2c68-404d-91bb-ddb4143114b2"),
                            Price = "800",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("3c528779-f2e9-4fc4-ad63-e7514ea750a1"),
                            Price = "1200",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("42d97c42-c98b-47bf-b52a-21ca659bbd6d"),
                            Price = "300",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("986e549b-e462-4558-b85b-c342227aa957"),
                            Price = "500",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("a7222b5d-1731-482b-8902-6dd9c70e78f6"),
                            Price = "800",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("fd7085eb-08de-41e7-8794-773c97f5529e"),
                            Price = "1200",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("505a5598-b14c-49f3-8a42-19142f1064be"),
                            Price = "300",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("cf744d9e-abc7-4e4a-9747-f7d24b60c399"),
                            Price = "500",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("35acc52e-805f-4637-bac4-2c47859800d7"),
                            Price = "800",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("b2ca6b7b-cdeb-43fa-8db8-b30353f53998"),
                            Price = "1200",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("a9c6bcf0-8bf7-4730-99d1-245a251d6d93"),
                            Price = "300",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("285046af-76b6-4011-b5d4-58468c4973b6"),
                            Price = "500",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("3367c3b4-5c3f-4814-b1b7-dd340e4cfec1"),
                            Price = "800",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("2bc9d667-0568-4c29-b471-c204ab1799ff"),
                            Price = "1200",
                            Usage = "Gamen"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Text = "Hoeveel geld wilt u besteden?"
                        },
                        new
                        {
                            Id = 2,
                            Text = "Waar ga je je laptop voor gebruiken?"
                        },
                        new
                        {
                            Id = 3,
                            Text = "Is het vooral video of foto bewerking?"
                        },
                        new
                        {
                            Id = 4,
                            Text = "Wat voor soort games speelt u?"
                        },
                        new
                        {
                            Id = 5,
                            Text = "Welke van de onderstaande games heeft u gespeeld of bent u van plan te spelen?"
                        },
                        new
                        {
                            Id = 6,
                            Text = "Doet u het professioneel?"
                        },
                        new
                        {
                            Id = 7,
                            Text = "Heeft u vaak veel programma's tegelijkertijd aanstaan? (4 of meer)"
                        },
                        new
                        {
                            Id = 8,
                            Text = "Heeft U liever meer FPS, en/of betere graphics"
                        },
                        new
                        {
                            Id = 9,
                            Text = "Welk grootte scherm heeft u het liefst"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.SingleAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AnswerId")
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("UserAnswerId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("UserAnswerId");

                    b.ToTable("SingeAnswers");
                });

            modelBuilder.Entity("nl.Commen.Models.SingleAnswerTemp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AnswerId")
                        .HasColumnType("longtext");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("SingleAnswerTemp");
                });

            modelBuilder.Entity("nl.Commen.Models.UserAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("UserAnswers");
                });

            modelBuilder.Entity("nl.Commen.Models.SingleAnswer", b =>
                {
                    b.HasOne("nl.Commen.Models.UserAnswer", null)
                        .WithMany("Answers")
                        .HasForeignKey("UserAnswerId");
                });

            modelBuilder.Entity("nl.Commen.Models.UserAnswer", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
