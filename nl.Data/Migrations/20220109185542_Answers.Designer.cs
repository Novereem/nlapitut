// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nl.Data;

namespace nl.Data.Migrations
{
    [DbContext(typeof(NlTutContext))]
    [Migration("20220109185542_Answers")]
    partial class Answers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("nl.Commen.Models.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("NextQuestionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Answer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("badb339d-caba-4310-9600-438d862296e5"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "300-500"
                        },
                        new
                        {
                            Id = new Guid("7ace35e7-901b-4c66-bab3-110a8fe010ce"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "500-800"
                        },
                        new
                        {
                            Id = new Guid("cfb107d8-5103-4878-9aba-0b7f7013b502"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "800-1200"
                        },
                        new
                        {
                            Id = new Guid("f26046e9-063e-40c7-a4a1-4158ebb4cf57"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "1200+"
                        },
                        new
                        {
                            Id = new Guid("e6c942d2-c927-47d2-83d1-a571ef2c7f0c"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Mail / Netflix & YouTube"
                        },
                        new
                        {
                            Id = new Guid("95d9dff9-d4a0-41f7-9480-1b29ded693cf"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("f8a30094-678a-44d7-8128-f860f8d11d64"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("3e709a64-d2e2-4dbc-a056-0ba8c27736df"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Gamen"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.Laptop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Price")
                        .HasColumnType("longtext");

                    b.Property<string>("Usage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Laptops");

                    b.HasData(
                        new
                        {
                            Id = new Guid("61d48146-657e-42ae-936d-9bfa83331ade"),
                            Price = "300",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("988b3db0-78bc-4694-b60b-adfd9e98cf92"),
                            Price = "500",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("53347cff-6ef0-4203-89db-f1df7885af39"),
                            Price = "800",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("7aa871fa-6d8f-4e2a-aa13-28325a8152cb"),
                            Price = "1200",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("8027b647-3402-4651-afd3-1ad2bcc214d9"),
                            Price = "300",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("e6f205e4-cd61-4c9d-a6ff-ea835c3f6e3c"),
                            Price = "500",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("eb0a79aa-8205-4d6b-95a9-502414239a39"),
                            Price = "800",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("9859da75-60a5-4d6c-9f4b-c96dbf127ab7"),
                            Price = "1200",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("a245a8ae-e90f-492f-bc9b-cd7dcc19081b"),
                            Price = "300",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("045649d2-c3ec-4b0c-aae1-aab6fb34fa6c"),
                            Price = "500",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("be061336-21ed-48c9-b63e-bcbe9ca8d83e"),
                            Price = "800",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("87b1dacd-73bf-438a-97c4-6ebd71186629"),
                            Price = "1200",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("fc061ccc-e5f9-4070-b4dc-87eca9d58d22"),
                            Price = "300",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("bdc15735-c996-48c3-abad-8ba791527048"),
                            Price = "500",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("5e906cdd-a19f-49b2-867d-d252ec08dda7"),
                            Price = "800",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("46585f76-7413-4541-bf9c-115d6d85ca6c"),
                            Price = "1200",
                            Usage = "Gamen"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Text = "Hoeveel geld wilt u besteden?"
                        },
                        new
                        {
                            Id = 2,
                            Text = "Waar ga je je laptop voor gebruiken"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.Results", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("nl.Commen.Models.UserAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AnswerId")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ResultsId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ResultsId");

                    b.ToTable("UserAnswers");
                });

            modelBuilder.Entity("nl.Commen.Models.UserAnswer", b =>
                {
                    b.HasOne("nl.Commen.Models.Results", null)
                        .WithMany("Answers")
                        .HasForeignKey("ResultsId");
                });

            modelBuilder.Entity("nl.Commen.Models.Results", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
