// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nl.Data;

namespace nl.Data.Migrations
{
    [DbContext(typeof(NlTutContext))]
    [Migration("20220109190421_Wouter")]
    partial class Wouter
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("nl.Commen.Models.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("NextQuestionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Answer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7f76e1fd-6864-4970-ae58-4d222f1ec3d3"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "300-500"
                        },
                        new
                        {
                            Id = new Guid("6b85d77e-03a0-49cc-81c5-a8d5fd4f4eeb"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "500-800"
                        },
                        new
                        {
                            Id = new Guid("ac5c8fd6-d973-4bc1-a219-ff3df628f42e"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "800-1200"
                        },
                        new
                        {
                            Id = new Guid("33aa7ca4-ef2d-4f55-b083-639c4ed1a7ab"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "1200+"
                        },
                        new
                        {
                            Id = new Guid("abeb4a5c-d9dd-47e0-b22d-e0f5c531adaf"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Mail / Netflix & YouTube"
                        },
                        new
                        {
                            Id = new Guid("943b9534-b833-4f4b-a16b-985b4fc3e16f"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("76c48119-0861-4a43-b96a-d2eb61a26001"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("3d98c984-dd38-47fa-9dfb-9560b56cea16"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Gamen"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.Laptop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Price")
                        .HasColumnType("longtext");

                    b.Property<string>("Usage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Laptops");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2886cf88-f1c9-476a-9d24-4a5386090a76"),
                            Price = "300",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("cc41c21c-b1dc-4c13-bc36-e6f7c76ff485"),
                            Price = "500",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("0cf266cc-964c-438e-911a-2c807ce84a08"),
                            Price = "800",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("516537dc-5f90-481b-9bd0-48fe8b058fb1"),
                            Price = "1200",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("f2af025b-21e6-4ece-825a-6c32d00cb487"),
                            Price = "300",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("5ac965cc-5b76-4db2-b042-4dd9b453b921"),
                            Price = "500",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("90cf04d8-3855-4cc6-ba76-907bab560c69"),
                            Price = "800",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("f065ab1e-3abc-4f92-95d8-95fb9c94f8f6"),
                            Price = "1200",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("21dbb7c3-466d-41bd-8a6e-46e5580012c5"),
                            Price = "300",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("33e82c8b-ff25-45b8-9f21-c50d997d09ec"),
                            Price = "500",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("5572133e-83a7-4a08-a490-426cbeb691cf"),
                            Price = "800",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("a4ff0df7-609f-46a3-a6f8-ac58b607f334"),
                            Price = "1200",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("3b447042-ebbc-4135-a5a6-0c3432a73735"),
                            Price = "300",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("9dea66ed-0422-4f2e-a722-eaa3308743b4"),
                            Price = "500",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("6d9ed885-2b93-43f2-9abf-8e8b8a72aa91"),
                            Price = "800",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("6e18b13a-3af0-41ce-ba26-cf435a1dbdf7"),
                            Price = "1200",
                            Usage = "Gamen"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Text = "Hoeveel geld wilt u besteden?"
                        },
                        new
                        {
                            Id = 2,
                            Text = "Waar ga je je laptop voor gebruiken"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.Results", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("nl.Commen.Models.UserAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AnswerId")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ResultsId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ResultsId");

                    b.ToTable("UserAnswers");
                });

            modelBuilder.Entity("nl.Commen.Models.UserAnswer", b =>
                {
                    b.HasOne("nl.Commen.Models.Results", null)
                        .WithMany("Answers")
                        .HasForeignKey("ResultsId");
                });

            modelBuilder.Entity("nl.Commen.Models.Results", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
