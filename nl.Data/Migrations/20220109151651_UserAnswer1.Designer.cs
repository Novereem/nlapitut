// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using nl.Data;

namespace nl.Data.Migrations
{
    [DbContext(typeof(NlTutContext))]
    [Migration("20220109151651_UserAnswer1")]
    partial class UserAnswer1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("nl.Commen.Models.Answer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("NextQuestionId")
                        .HasColumnType("int");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Answer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("37779411-ca3e-4d79-b660-613fb0620eae"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "300-500"
                        },
                        new
                        {
                            Id = new Guid("b0ac0a94-9497-445c-8660-c5bc63d1e713"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "500-800"
                        },
                        new
                        {
                            Id = new Guid("0b01958a-f2e1-4c59-9b0d-d18da8b7e338"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "800-1200"
                        },
                        new
                        {
                            Id = new Guid("71fe6b6e-5d48-420a-a5e2-69b2350c2e60"),
                            NextQuestionId = 2,
                            QuestionId = 1,
                            Text = "1200+"
                        },
                        new
                        {
                            Id = new Guid("cc833676-d59a-4795-af96-fd85e8137c3a"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Mail / Netflix & YouTube"
                        },
                        new
                        {
                            Id = new Guid("91f0fd9c-31fc-42b9-ba41-2b518d605520"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("0e97a48d-c000-4e58-abcc-7b29c809ea01"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("7975a95d-1a1a-48a4-99c1-14909fa3ea6a"),
                            NextQuestionId = 1,
                            QuestionId = 2,
                            Text = "Gamen"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.Laptop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Price")
                        .HasColumnType("longtext");

                    b.Property<string>("Usage")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Laptops");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a29fefd4-b4aa-427a-ad0a-82b4dbfdc179"),
                            Price = "300",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("5b64c264-2681-4fcd-8d79-6eac537a2078"),
                            Price = "500",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("8993cdb4-48d9-4634-aba2-f1896466cdd9"),
                            Price = "800",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("1b9a5c4e-8cf8-4ba0-9bf0-37bae6cab99e"),
                            Price = "1200",
                            Usage = "Mail"
                        },
                        new
                        {
                            Id = new Guid("e9988d16-ab79-4786-a4e7-77ab9ee09b01"),
                            Price = "300",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("591ff4a4-2c33-43d3-8f74-064281662f93"),
                            Price = "500",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("fd6bb4a1-8372-4ecd-bfee-b99425f61a5f"),
                            Price = "800",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("fac4a43a-c198-4adb-9414-3f7f7e82d70c"),
                            Price = "1200",
                            Usage = "Documenten bewerken"
                        },
                        new
                        {
                            Id = new Guid("9695d863-3e5c-49cb-bdb5-b5c472f9d2f5"),
                            Price = "300",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("23331025-ba04-4828-9289-4a15106f1ebc"),
                            Price = "500",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("a54e5258-d42c-490c-8a6e-297af72e3643"),
                            Price = "800",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("7e6449c3-891e-40d3-b8dc-0ac70b250b9e"),
                            Price = "1200",
                            Usage = "Foto's/videdo's bewerken"
                        },
                        new
                        {
                            Id = new Guid("e3b72ffa-4c51-4237-ab50-c88da2a2373b"),
                            Price = "300",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("e531bba8-65f8-4207-908d-516917502d7c"),
                            Price = "500",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("dafb6aa7-5212-4c97-b399-e53f67ff2013"),
                            Price = "800",
                            Usage = "Gamen"
                        },
                        new
                        {
                            Id = new Guid("f8f758be-aa67-46e1-906e-4abb6b0b1c6d"),
                            Price = "1200",
                            Usage = "Gamen"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Question");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Text = "Hoeveel geld wilt u besteden?"
                        },
                        new
                        {
                            Id = 2,
                            Text = "Waar ga je je laptop voor gebruiken"
                        });
                });

            modelBuilder.Entity("nl.Commen.Models.Results", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("nl.Commen.Models.UserAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("AnswerId")
                        .HasColumnType("longtext");

                    b.Property<Guid?>("ResultsId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ResultsId");

                    b.ToTable("UserAnswers");
                });

            modelBuilder.Entity("nl.Commen.Models.UserAnswer", b =>
                {
                    b.HasOne("nl.Commen.Models.Results", null)
                        .WithMany("Answers")
                        .HasForeignKey("ResultsId");
                });

            modelBuilder.Entity("nl.Commen.Models.Results", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
